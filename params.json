{"name":"Butter","tagline":"A javascript tf-idf library.  It finds the top most frequently recurring words on a webpage.  ","body":"# Butter \r\n### A [tf-idf](http://en.wikipedia.org/wiki/Tf*idf) JavaScript library\r\n\r\n[![Butter](https://raw.github.com/spatzle/butter/master/butter.jpg)]()\r\n\r\n### Purpose\r\n\r\nThis is a javascript library that can be used for finding out (the most frequently used words on a webpage using tf-idf).   It was initially made for recognizing cooking ingredients from recipes web sites, please modify for use in other domains.\r\n\r\n\r\n### Requirements\r\n\r\n* jquery https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\r\n* underscoreJS http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min.js \r\n\r\n\r\n### Thanks\r\n\r\n* ported from [my python tf-idf library](https://github.com/spatzle/tf-idf) which was extended from [TimTrueman's](https://github.com/timtrueman/tf-idf) but w/ the addition of [nltk](http://nltk.org/)\r\n* stemmer - http://qaa.ath.cx/porter_js_demo.html\r\n* sorting an object - http://wolfram.kriesing.de/blog/index.php/2008/javascript-sort-object-by-a-value\r\n* stopwords library - http://tedserbinski.com/files/stopwords.js.txt with extensions for cooking recipe words\r\n* fast dictionary look up js - http://stevehanov.ca/blog/index.php?id=120\r\n\r\nAdd this to the head section your webpage (change the library paths acorddingly), to see how it works\r\n\r\n### To Test this\r\n\r\n    \t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\"></script>\r\n      <script src=\"http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.3.3/underscore-min.js\"></script>\r\n      <script src=\"../lib/stopwords.js\"></script>\r\n      <script src=\"../lib/tfidf.js\"></script>\r\n      <script src=\"../lib/tokenize.js\"></script>\r\n      <script src=\"../lib/corpus_tools.js\"></script>\r\n      <script src=\"../lib/collections_tools.js\"></script>\r\n      <script src=\"../lib/stemmer-min.js\"></script>\r\n      <script src=\"../test_data/test_data.js\"></script>\r\n      <script>\r\n        $(function() {\r\n          var corpus = \"\";\r\n          // if($('li.ingredient.type').length>0){\r\n          //  alert(getTextNodesIn('.ingredient.type').text());\r\n          // }\r\n          if($('li.ingredient').length>0){ // here use recipes microformats\r\n            var items = getTextNodesIn('li.ingredient').text()\r\n            alert(items);\r\n          }\r\n          else{ // don't use recipes microformat, scan the whole text\r\n            corpus  = getTextNodesIn('div').text();\r\n            alert(analyze_web_text(corpus));\r\n          }\r\n      });\r\n      </script>\r\n\r\n### TODO\r\n\r\n* create a GreaseMonkey / Chrome Extension\r\n\r\n### resources\r\n\r\n* [food ingredients dictionary](http://www.gourmetsleuth.com/Dictionary.aspx)\r\n\r\n#### more info about recipes\r\nThis library doens't need to make use of recipes microformat to work, but if you would like more info\r\n[Recipes Microformat](http://microformats.org/wiki/hrecipe)\r\n\r\n### Licence\r\n[MIT](http://joyce.mit-license.org/)\r\n\r\n### changelog\r\n2013-03-01  Joyce Chan  <joyce.sz.chan at gmail.com>\r\n\r\n* initial release\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}